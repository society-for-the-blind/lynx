# Generated by Django 4.2 on 2024-09-22 00:53

from django.db import migrations

def add_initial_outcome_names(apps, schema_editor):
    OIBOutcome = apps.get_model('lynx', 'OIBOutcome')
    outcome_list = [
        "AT Goal Outcomes",
        "IL/A Service Goal Outcome",
        "Living Situation Outcome",
        "Home and Community Involvement Outcome",
        "Employment outcomes"
    ]
    for outcome_name in outcome_list:
        OIBOutcome.objects.create( name=outcome_name )

def add_initial_outcome_choices(apps, schema_editor):

    OIBOutcomeChoice = apps.get_model('lynx', 'OIBOutcomeChoice')

    choices = [
        "Plan not complete",
        "Plan complete, feeling more confident in ability to maintain living situation",
        "Plan complete, no difference in ability to maintain living situation",
        "Plan complete, feeling less confident in ability to maintain living situation",
        "Not assessed",
        "Assessed with improved independence",
        "Assessed and maintained independence",
        "Assessed with decreased independence",
        "Not Interested in Employment",
        "Less Likely to Seek Employment",
        "Unsure about Seeking Employment",
        "More Likely to Seek Employment"
    ]

    for choice in choices:
        OIBOutcomeChoice.objects.create( name = choice )

def pair_outcomes_and_choices(apps, schema_editor):

    OIBOutcomeChoice = apps.get_model('lynx', 'OIBOutcomeChoice')
    OIBOutcome       = apps.get_model('lynx', 'OIBOutcome'      )

    at  = OIBOutcome.objects.filter( name__startswith="AT Goal" )[0]
    ils = OIBOutcome.objects.filter( name__startswith="IL/A"    )[0]


    na   = OIBOutcomeChoice.objects.get( name = "Not assessed")
    imp  = OIBOutcomeChoice.objects.get( name = "Assessed with improved independence")
    main = OIBOutcomeChoice.objects.get( name = "Assessed and maintained independence")
    dec  = OIBOutcomeChoice.objects.get( name = "Assessed with decreased independence")

    for choice in [ na, imp, main, dec ]:
        for outcome in [ at, ils ]:
            OIBOutcomeChoice.objects.create(
                name        = choice,
                oib_outcome = outcome
            )

    ls  = OIBOutcome.objects.filter( name__startswith="Living"  )[0]
    hci = OIBOutcome.objects.filter( name__startswith="Home"    )[0]

    nc   = OIBOutcomeChoice.objects.get( name = "Plan not complete")
    more = OIBOutcomeChoice.objects.filter( name__contains = "more confident")[0]
    nd   = OIBOutcomeChoice.objects.filter( name__contains = "no difference")[0]
    less = OIBOutcomeChoice.objects.filter( name__contains = "less confident")[0]

    for choice in [ nc, more, nd, less ]:
        for outcome in [ ls, hci ]:
            OIBOutcomeChoice.objects.create(
                name        = choice,
                oib_outcome = outcome
            )

    emp = OIBOutcome.objects.filter( name__startswith="Employ"  )[0]

    ni     = OIBOutcomeChoice.objects.get( name = "Not Interested in Employment")
    unseek = OIBOutcomeChoice.objects.get( name = "Less Likely to Seek Employment")
    unsure = OIBOutcomeChoice.objects.get( name = "Unsure about Seeking Employment")
    doseek = OIBOutcomeChoice.objects.get( name = "More Likely to Seek Employment")

    for choice in [ ni, unseek, unsure, doseek ]:
        OIBOutcomeChoice.objects.create(
            name        = choice,
            oib_outcome = emp
        )

class Migration(migrations.Migration):

    dependencies = [
        ('lynx', '0110_add_OIB_outcome_and_choices'),
    ]

    operations = [
        migrations.RunPython(add_initial_outcome_names),
        migrations.RunPython(add_initial_outcome_choices),
        # migrations.RunPython(pair_outcomes_and_choices)
    ]
