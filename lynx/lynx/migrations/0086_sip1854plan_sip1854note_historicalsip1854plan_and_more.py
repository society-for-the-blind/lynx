# Generated by Django 4.2 on 2023-10-01 19:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import lynx.models
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('lynx', '0085_historicalvaccine_historicaldocument_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Sip1854Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True)),
                ('at_services', models.BooleanField(blank=True, default=False)),
                ('independent_living', models.BooleanField(blank=True, default=False)),
                ('orientation', models.BooleanField(blank=True, default=False)),
                ('communications', models.BooleanField(blank=True, default=False)),
                ('dls', models.BooleanField(blank=True, default=False)),
                ('advocacy', models.BooleanField(blank=True, default=False)),
                ('counseling', models.BooleanField(blank=True, default=False)),
                ('information', models.BooleanField(blank=True, default=False)),
                ('other_services', models.BooleanField(blank=True, default=False)),
                ('plan_name', models.CharField(blank=True, max_length=100, null=True)),
                ('plan_date', models.DateField(blank=True, null=True)),
                ('support_services', models.BooleanField(blank=True, default=False)),
                ('living_plan_progress', models.CharField(blank=True, choices=[('Plan not complete', 'Plan not complete'), ('Plan complete, feeling more confident in ability to maintain living situation', 'Plan complete, feeling more confident in ability to maintain living situation'), ('Plan complete, no difference in ability to maintain living situation', 'Plan complete, no difference in ability to maintain living situation'), ('Plan complete, feeling less confident in ability to maintain living situation', 'Plan complete, feeling less confident in ability to maintain living situation')], default='Plan not complete', max_length=150, null=True)),
                ('community_plan_progress', models.CharField(blank=True, choices=[('Plan not complete', 'Plan not complete'), ('Plan complete, feeling more confident in ability to maintain living situation', 'Plan complete, feeling more confident in ability to maintain living situation'), ('Plan complete, no difference in ability to maintain living situation', 'Plan complete, no difference in ability to maintain living situation'), ('Plan complete, feeling less confident in ability to maintain living situation', 'Plan complete, feeling less confident in ability to maintain living situation')], default='Plan not complete', max_length=150, null=True)),
                ('at_outcomes', models.CharField(blank=True, choices=[('Not assessed', 'Not assessed'), ('Assessed with improved independence', 'Assessed with improved independence'), ('Assessed and maintained independence', 'Assessed and maintained independence'), ('Assessed with decreased independence', 'Assessed with decreased independence')], default='Not assessed', max_length=150, null=True)),
                ('ila_outcomes', models.CharField(blank=True, choices=[('Not assessed', 'Not assessed'), ('Assessed with improved independence', 'Assessed with improved independence'), ('Assessed and maintained independence', 'Assessed and maintained independence'), ('Assessed with decreased independence', 'Assessed with decreased independence')], default='Not assessed', max_length=150, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lynx.contact')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(lynx.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sip1854Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(null=True)),
                ('note_date', models.DateField(blank=True, null=True)),
                ('vision_screening', models.BooleanField(blank=True, default=False)),
                ('treatment', models.BooleanField(blank=True, default=False)),
                ('at_devices', models.BooleanField(blank=True, default=False)),
                ('at_services', models.BooleanField(blank=True, default=False)),
                ('independent_living', models.BooleanField(blank=True, default=False)),
                ('orientation', models.BooleanField(blank=True, default=False)),
                ('communications', models.BooleanField(blank=True, default=False)),
                ('dls', models.BooleanField(blank=True, default=False)),
                ('support', models.BooleanField(blank=True, default=False)),
                ('advocacy', models.BooleanField(blank=True, default=False)),
                ('counseling', models.BooleanField(blank=True, default=False)),
                ('information', models.BooleanField(blank=True, default=False)),
                ('services', models.BooleanField(blank=True, default=False)),
                ('retreat', models.BooleanField(blank=True, default=False)),
                ('in_home', models.BooleanField(blank=True, default=False)),
                ('seminar', models.BooleanField(blank=True, default=False)),
                ('modesto', models.BooleanField(blank=True, default=False)),
                ('group', models.BooleanField(blank=True, default=False)),
                ('community', models.BooleanField(blank=True, default=False)),
                ('fiscal_year', models.CharField(blank=True, max_length=15, null=True)),
                ('quarter', models.IntegerField(blank=True, null=True)),
                ('class_hours', models.FloatField(blank=True, choices=[(0.25, '15 Minutes'), (0.5, '30 Minutes'), (0.75, '45 Minutes'), (1, '1 Hour'), (1.25, '1 Hour 15 Minutes'), (1.5, '1 Hour 30 Minutes'), (1.75, '1 Hour 45 Minutes'), (2, '2 Hours'), (2.25, '2 Hours 15 Minutes'), (2.5, '2 Hours 30 Minutes'), (2.75, '2 Hours 45 Minutes'), (3, '3 Hours'), (3.25, '3 Hours 15 Minutes'), (3.5, '3 Hours 30 Minutes'), (3.75, '3 Hours 45 Minutes'), (4, '4 Hours'), (4.25, '4 Hours 15 Minutes'), (4.5, '4 Hours 30 Minutes'), (4.75, '4 Hours 45 Minutes'), (5, '5 Hours'), (5.25, '5 Hours 15 Minutes'), (5.5, '5 Hours 30 Minutes'), (5.75, '5 Hours 45 Minutes'), (6, '6 Hours'), (6.25, '6 Hours 15 Minutes'), (6.5, '6 Hours 30 Minutes'), (6.75, '6 Hours 45 Minutes'), (7, '7 Hours'), (7.25, '7 Hours 15 Minutes'), (7.5, '7 Hours 30 Minutes'), (7.75, '7 Hours 45 Minutes'), (8, '8 Hours')], null=True)),
                ('instructor', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lynx.contact')),
                ('sip_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lynx.sip1854plan')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(lynx.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalSip1854Plan',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True)),
                ('at_services', models.BooleanField(blank=True, default=False)),
                ('independent_living', models.BooleanField(blank=True, default=False)),
                ('orientation', models.BooleanField(blank=True, default=False)),
                ('communications', models.BooleanField(blank=True, default=False)),
                ('dls', models.BooleanField(blank=True, default=False)),
                ('advocacy', models.BooleanField(blank=True, default=False)),
                ('counseling', models.BooleanField(blank=True, default=False)),
                ('information', models.BooleanField(blank=True, default=False)),
                ('other_services', models.BooleanField(blank=True, default=False)),
                ('plan_name', models.CharField(blank=True, max_length=100, null=True)),
                ('plan_date', models.DateField(blank=True, null=True)),
                ('support_services', models.BooleanField(blank=True, default=False)),
                ('living_plan_progress', models.CharField(blank=True, choices=[('Plan not complete', 'Plan not complete'), ('Plan complete, feeling more confident in ability to maintain living situation', 'Plan complete, feeling more confident in ability to maintain living situation'), ('Plan complete, no difference in ability to maintain living situation', 'Plan complete, no difference in ability to maintain living situation'), ('Plan complete, feeling less confident in ability to maintain living situation', 'Plan complete, feeling less confident in ability to maintain living situation')], default='Plan not complete', max_length=150, null=True)),
                ('community_plan_progress', models.CharField(blank=True, choices=[('Plan not complete', 'Plan not complete'), ('Plan complete, feeling more confident in ability to maintain living situation', 'Plan complete, feeling more confident in ability to maintain living situation'), ('Plan complete, no difference in ability to maintain living situation', 'Plan complete, no difference in ability to maintain living situation'), ('Plan complete, feeling less confident in ability to maintain living situation', 'Plan complete, feeling less confident in ability to maintain living situation')], default='Plan not complete', max_length=150, null=True)),
                ('at_outcomes', models.CharField(blank=True, choices=[('Not assessed', 'Not assessed'), ('Assessed with improved independence', 'Assessed with improved independence'), ('Assessed and maintained independence', 'Assessed and maintained independence'), ('Assessed with decreased independence', 'Assessed with decreased independence')], default='Not assessed', max_length=150, null=True)),
                ('ila_outcomes', models.CharField(blank=True, choices=[('Not assessed', 'Not assessed'), ('Assessed with improved independence', 'Assessed with improved independence'), ('Assessed and maintained independence', 'Assessed and maintained independence'), ('Assessed with decreased independence', 'Assessed with decreased independence')], default='Not assessed', max_length=150, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sip1854 plan',
                'verbose_name_plural': 'historical sip1854 plans',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSip1854Note',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('note', models.TextField(null=True)),
                ('note_date', models.DateField(blank=True, null=True)),
                ('vision_screening', models.BooleanField(blank=True, default=False)),
                ('treatment', models.BooleanField(blank=True, default=False)),
                ('at_devices', models.BooleanField(blank=True, default=False)),
                ('at_services', models.BooleanField(blank=True, default=False)),
                ('independent_living', models.BooleanField(blank=True, default=False)),
                ('orientation', models.BooleanField(blank=True, default=False)),
                ('communications', models.BooleanField(blank=True, default=False)),
                ('dls', models.BooleanField(blank=True, default=False)),
                ('support', models.BooleanField(blank=True, default=False)),
                ('advocacy', models.BooleanField(blank=True, default=False)),
                ('counseling', models.BooleanField(blank=True, default=False)),
                ('information', models.BooleanField(blank=True, default=False)),
                ('services', models.BooleanField(blank=True, default=False)),
                ('retreat', models.BooleanField(blank=True, default=False)),
                ('in_home', models.BooleanField(blank=True, default=False)),
                ('seminar', models.BooleanField(blank=True, default=False)),
                ('modesto', models.BooleanField(blank=True, default=False)),
                ('group', models.BooleanField(blank=True, default=False)),
                ('community', models.BooleanField(blank=True, default=False)),
                ('fiscal_year', models.CharField(blank=True, max_length=15, null=True)),
                ('quarter', models.IntegerField(blank=True, null=True)),
                ('class_hours', models.FloatField(blank=True, choices=[(0.25, '15 Minutes'), (0.5, '30 Minutes'), (0.75, '45 Minutes'), (1, '1 Hour'), (1.25, '1 Hour 15 Minutes'), (1.5, '1 Hour 30 Minutes'), (1.75, '1 Hour 45 Minutes'), (2, '2 Hours'), (2.25, '2 Hours 15 Minutes'), (2.5, '2 Hours 30 Minutes'), (2.75, '2 Hours 45 Minutes'), (3, '3 Hours'), (3.25, '3 Hours 15 Minutes'), (3.5, '3 Hours 30 Minutes'), (3.75, '3 Hours 45 Minutes'), (4, '4 Hours'), (4.25, '4 Hours 15 Minutes'), (4.5, '4 Hours 30 Minutes'), (4.75, '4 Hours 45 Minutes'), (5, '5 Hours'), (5.25, '5 Hours 15 Minutes'), (5.5, '5 Hours 30 Minutes'), (5.75, '5 Hours 45 Minutes'), (6, '6 Hours'), (6.25, '6 Hours 15 Minutes'), (6.5, '6 Hours 30 Minutes'), (6.75, '6 Hours 45 Minutes'), (7, '7 Hours'), (7.25, '7 Hours 15 Minutes'), (7.5, '7 Hours 30 Minutes'), (7.75, '7 Hours 45 Minutes'), (8, '8 Hours')], null=True)),
                ('instructor', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('sip_plan', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.sip1854plan')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sip1854 note',
                'verbose_name_plural': 'historical sip1854 notes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
